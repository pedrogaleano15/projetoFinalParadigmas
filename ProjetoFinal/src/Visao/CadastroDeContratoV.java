/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Visao;

import Controle.ContratosC;
import Controle.PropriedadesC;
import Controle.inquilinosC;
import Modelo.ContratoM;
import javax.swing.JOptionPane;
import java.sql.ResultSet;

/**
 *
 * @author User
 */
public class CadastroDeContratoV extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastroDeContratoV
     */
    public CadastroDeContratoV() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTDatainicio = new javax.swing.JTextField();
        jTDatatermino = new javax.swing.JTextField();
        jTValor = new javax.swing.JTextField();
        jTIDInquilino = new javax.swing.JTextField();
        jTIDPropriedade = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jLabel2.setText("Data Inicio:");

        jLabel3.setText("Data Fim");

        jLabel4.setText("Valor:");

        jLabel5.setText("ID Inquilino");

        jLabel6.setText("Id Propriedade");

        jTDatainicio.setColumns(10);

        jTDatatermino.setColumns(10);

        jTValor.setColumns(10);

        jTIDInquilino.setColumns(10);

        jTIDPropriedade.setColumns(10);

        jButton1.setText("Cadastrar Contrato");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarContrato(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTIDPropriedade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTIDInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTDatatermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTDatainicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jButton1)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTDatainicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTDatatermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTIDInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jTIDPropriedade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jButton1)
                .addGap(0, 44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CadastrarContrato(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarContrato
        try {
            // Obter valores dos campos
            String dataInicio = jTDatainicio.getText();
            String dataFim = jTDatatermino.getText();
            double valor = Double.parseDouble(jTValor.getText());
            int idInquilino = Integer.parseInt(jTIDInquilino.getText());
            int idImovel = Integer.parseInt(jTIDPropriedade.getText());
            
            // Verificar se o inquilino existe
            inquilinosC inquilinoController =new inquilinosC();
            PropriedadesC propriedadeController = new PropriedadesC();
            ContratosC contratoController =new  ContratosC();
            ResultSet rsInquilino = inquilinoController.consultarInquilino(idInquilino);
            if (!rsInquilino.next()) {
                JOptionPane.showMessageDialog(this, "Inquilino não encontrado com o ID: " + idInquilino, 
                    "Erro de Validação", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Verificar se o imóvel existe
            ResultSet rsImovel = propriedadeController.consultarPropriedade(idImovel);
            if (!rsImovel.next()) {
                JOptionPane.showMessageDialog(this, "Imóvel não encontrado com o ID: " + idImovel, 
                    "Erro de Validação", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Criar objeto ContratoM
            ContratoM novoContrato = new ContratoM(dataInicio, dataFim, valor, idInquilino, idImovel);
            
            // Chamar o controller para inserir o contrato
            contratoController.inserirContrato(novoContrato);
            
            // Mensagem de sucesso
            JOptionPane.showMessageDialog(this, "Contrato cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira valores numéricos válidos para Valor, ID Inquilino e ID Imóvel.", 
                "Erro de Formato", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar contrato: " + e.getMessage(), 
                "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_CadastrarContrato


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTDatainicio;
    private javax.swing.JTextField jTDatatermino;
    private javax.swing.JTextField jTIDInquilino;
    private javax.swing.JTextField jTIDPropriedade;
    private javax.swing.JTextField jTValor;
    // End of variables declaration//GEN-END:variables
}
